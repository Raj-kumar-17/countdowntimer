{"version":3,"sources":["App.js","index.js"],"names":["App","React","useState","date","setDate","d","setD","h","setH","m","setM","s","setS","val","diff","Date","parse","days","Math","floor","hours","mins","useEffect","interval","setInterval","clearInterval","className","name","placeholder","onChange","e","target","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iLA+EeA,MA5Ef,WAIA,MAAoBC,IAAMC,SAAS,IAAnC,mBAAMC,EAAN,KAAWC,EAAX,KACA,EAAcH,IAAMC,WAApB,mBAAMG,EAAN,KAAQC,EAAR,KACA,EAAcL,IAAMC,WAApB,mBAAMK,EAAN,KAAQC,EAAR,KACA,EAAcP,IAAMC,WAApB,mBAAMO,EAAN,KAAQC,EAAR,KACA,EAAcT,IAAMC,WAApB,mBAAMS,EAAN,KAAQC,EAAR,KAQMC,EAAI,WACV,IAEIC,EAFOC,KAAKC,MAAMb,GACd,IAAIY,KAERE,EAAOC,KAAKC,MAAML,EAAI,OACpBM,EAAQF,KAAKC,MAAML,EAAI,MACxBO,EAAOH,KAAKC,MAAML,EAAI,KAIvBP,EAAIa,EAAe,GAAPH,EACZR,EAAIY,EAAe,GAARD,EACXT,EALQO,KAAKC,MAAML,EAAO,KAKR,GAAPO,EAEff,EALQW,GAMRT,EAAKD,GACLG,EAAKD,GACLG,EAAKD,IAaH,OARFV,IAAMqB,WAAU,WACd,IAAMC,EAAWC,YAAYX,EAAI,KACjC,OAAO,kBAAMY,cAAcF,OAOzB,qBAAKG,UAAU,MAAf,SACE,iCACE,iDAEA,sBAAKA,UAAU,OAAf,UACA,gCAAMrB,EACN,4CAEA,gCAAME,EACN,6CAEA,gCAAME,EACN,+CAEA,gCAAME,EAAE,mDAIR,qBAAKe,UAAU,WAAf,SACE,uBAAOC,KAAK,OAAOD,UAAU,QAAQE,YAAY,2BAA2BC,SAxDnE,SAACC,GAElB1B,EAAQ0B,EAAEC,OAAOC,kBCTnBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.dec9548f.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nfunction App() {\n\n \n\nconst[date,setDate]=React.useState(\"\"); \nconst[d,setD]=React.useState(); \nconst[h,setH]=React.useState();\nconst[m,setM]=React.useState();\nconst[s,setS]=React.useState();\n\nconst handleChange=(e)=>\n{\n  setDate(e.target.value);\n}\n\n\nconst val=()=>{\nvar future=Date.parse(date);\nvar now=new Date();\nvar diff=future-now;\nlet days = Math.floor(diff / (1000 * 60 * 60 * 24));\nlet   hours = Math.floor(diff / (1000 * 60 * 60));\nlet  mins = Math.floor(diff / (1000 * 60));\nlet  secs = Math.floor(diff / 1000);\n\nlet d = days;\nlet h = hours - days * 24;\nlet m = mins - hours * 60;\nlet s = secs - mins * 60;\n\nsetD(d);\nsetH(h);\nsetM(m);\nsetS(s);\n}\n\n\n\nReact.useEffect(() => {\n  const interval = setInterval(val,1000);\n  return () => clearInterval(interval);\n});  \n\n\n \n\n  return (\n    <div className=\"App\">\n      <body>\n        <h1>COUNTDOWN TIMER</h1>\n        \n        <div className=\"disp\">\n        <div>{d}\n        <span> Days</span>\n        </div> \n        <div>{h}\n        <span> Hours</span>\n        </div> \n        <div>{m}\n        <span> Minutes</span>\n        </div> \n        <div>{s}<span>  Seconds</span>\n        </div>\n\n        </div>\n        <div className=\"inputbox\">\n          <input name=\"Date\" className=\"input\" placeholder=\"eg:jun 12, 2022 01:30:00\" onChange={handleChange}></input>\n          \n        </div>\n        \n      </body>\n    </div>\n  );\n  \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}